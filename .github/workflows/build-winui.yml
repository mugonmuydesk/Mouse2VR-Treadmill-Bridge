name: Build WinUI

on:
  push:
    branches: [ main, winui-dev ]
    paths:
      - 'src/winui/**'
      - 'src/core/**'
      - '.github/workflows/build-winui.yml'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-winui:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2
    
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v2
    
    - name: Restore NuGet packages for WinUI
      run: |
        cd src/winui
        nuget restore packages.config -PackagesDirectory packages
    
    - name: Build Core Library
      run: |
        cmake -B build -DCMAKE_BUILD_TYPE=Release -DBUILD_CONSOLE=ON -DBUILD_WIN32_GUI=OFF
        cmake --build build --config Release --target Mouse2VRCore
    
    - name: Build WinUI Application
      run: |
        cd src/winui
        msbuild Mouse2VR_WinUI.vcxproj /p:Configuration=Release /p:Platform=x64 /p:OutDir=${{ github.workspace }}\build\bin\Release\ /p:IntDir=${{ github.workspace }}\build\obj\winui\
    
    - name: Copy dependencies
      run: |
        $outputDir = "${{ github.workspace }}\build\bin\Release"
        
        # Copy Windows App SDK runtime
        Copy-Item "src\winui\packages\Microsoft.WindowsAppSDK.*\runtimes\win-x64\native\*.dll" -Destination $outputDir -Force
        
        # Copy ViGEmClient DLL
        if (Test-Path "build\bin\Release\ViGEmClient.dll") {
          Copy-Item "build\bin\Release\ViGEmClient.dll" -Destination $outputDir -Force
        }
    
    - name: Upload WinUI Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Mouse2VR-WinUI
        path: |
          build/bin/Release/Mouse2VR_WinUI.exe
          build/bin/Release/*.dll
          build/bin/Release/resources.pri